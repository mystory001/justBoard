<?xml version="1.0" encoding="UTF-8"?> <!-- xml 파일이고, 버전 1.0, UTF-8로 인코딩 -->
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"> <!-- web.xml의 루트 엘리먼트. 모든 웹 애플리케이션 설정은 web-app 태그 사이에 존재해야함 -->

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param> <!-- context는 이름이나 객체를 바인딩하는 집합의 역할을 담당. 어떠한 객체를 핸들링하기 위한 접근 수단. 사용자가 직접 컨트롤하는 xml파일을 지정해주는 역할 --> <!-- context-param 태그에 설정되어 있는 root-context.xml은 모든 서블릿 필터에서 사용되는 루트 스프링 컨테이너 설정 -->
		<param-name>contextConfigLocation</param-name> <!-- param-name 파라미터 이름 -->
		<param-value>/WEB-INF/spring/root-context.xml</param-value> <!-- param-value 파라미터 값 -->
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener> <!-- 모든 서블릿과 필터에 의해 공유되는 스프링 컨테이너를 생성 -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> <!-- ContextLoaderListener 클래스가 생성하는 WebApplicationContext는 웹 애플리케이션에서 루트 컨텍스트가 되며, 자식은 루트가 제공하는 객체(bean)을 사용할 수 있음 -->
	</listener>

	<!-- Processes application requests -->
	<servlet> <!-- 애플리케이션의 요청을 처리. 클라이언트가 요청을 보내면 그에 따라 요청을 처리할 수 있는 곳으로 넘겨주고, 결과를 서버쪽 응답을 통해 클라이언트에게 넘겨주는 곳을 지정. 이를 진행하는 것이 DispatcherServlet -->
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 추가 -->
	<filter> <!-- filter 웹 애플리케이션 전반에 걸쳐 특정 URL이나 파일 요청 시 미리 로딩되어 사전에 처리할 작업을 필터링하고 해당 요청을 처리 -->
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	
	<filter-mapping> <!-- 필터를 적용할 name,servlet, url-pattern등을 지정 -->
		<filter-name>encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


</web-app>
